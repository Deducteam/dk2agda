Tick : Type.

tick : Tick -> Tick.

def loop : Tick.

Eq : Tick -> Tick -> Type.

refl : t : Tick -> Eq t t.

def match : t : Tick -> Eq t t.

[t] match (tick t) --> refl (tick t).

def etaEq : Eq loop loop.

[] loop --> tick loop.

[] etaEq --> match loop.

#INFER etaEq. (; creates a Stack overflow ;)
