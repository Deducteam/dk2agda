Nat : Type.

0 : Nat.
S : Nat -> Nat.

def 1 : Nat := S 0.
def 2 : Nat := S 1.
def 3 : Nat := S 2.
def 4 : Nat := S 3.

Vec : Nat -> Type.

nil : Vec 0.
cns : n : Nat -> Vec n -> Vec (S n).

def tail : n:Nat -> Vec (S n) -> Vec n.

[n,v] tail n (cns _ v) --> v.

def f : Nat -> Nat.

[]  f 0         --> S (S 0).
[]  f (S 0)     --> S (S 0).
[n] f (S (S n)) --> S (S (f n)).

cnsf : n:Nat -> Vec n -> Vec (f n).

def idf : n:Nat -> Vec (f n) -> Vec (f n).

[n,v] idf _ (cnsf n v) --> cnsf n v.
